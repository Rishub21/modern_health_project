{"ast":null,"code":"var _jsxFileName = \"/Users/rishubnahar/Desktop/djangoprojects/modern_health_project/front_end/src/components/programs.js\";\nimport React from 'react';\nimport HorizontalScroller from 'react-horizontal-scroll-container';\n\nclass ProgramLibrary extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createLibrary = programList => {\n      const programLibrary = programList.map((program, index) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \" \", \"Program \" + (index + 1) + \": \" + program.name), React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, this.createSectionCards(program)))));\n      return programLibrary;\n    };\n\n    this.createSectionCards = program => {\n      const divStyle = {\n        margin: '30px',\n        maxWidth: '20%'\n      };\n      const scrollBox = {\n        overflowY: \"scroll\",\n        height: \"50px\"\n      };\n      const checkBoxStyle = {\n        margin: \"10px\",\n        marginTop: \"10px\"\n      };\n\n      const pathToCats = require.context('../images/', true);\n\n      var imagePathMap = {\n        \"action\": require('../images/action.png'),\n        \"flexibility\": require('../images/flexible.png'),\n        \"mind\": require('../images/mind.png'),\n        \"values\": require('../images/values.png'),\n        \"creative\": require('../images/creative.png'),\n        \"empathy\": require('../images/empathy.png')\n      };\n      const sectionList = program.sectionList.map((section, index) => React.createElement(\"div\", {\n        class: \"col m4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"card\",\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"card-image waves-effect waves-block waves-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        class: \"activator\",\n        src: imagePathMap[section.imageName],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        class: \"filled-in\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Complete\")), React.createElement(\"div\", {\n        class: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"card-title activator blue-text text-darken-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"  \", \"Part \" + (index + 1) + \": \" + section.name, \" \", React.createElement(\"i\", {\n        class: \"material-icons right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"more_vert\")), React.createElement(\"p\", {\n        style: scrollBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \" \", section.description, \" \")), React.createElement(\"div\", {\n        class: \"card-reveal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"card-title grey-text text-darken-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \" \", \"PART \" + (index + 1) + \" \" + section.name, \" \", React.createElement(\"i\", {\n        class: \"material-icons right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"close\")), React.createElement(\"p\", {\n        dangerouslySetInnerHTML: {\n          __html: section.htmlContent\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })))));\n      return sectionList;\n    };\n  }\n\n  render() {\n    var lister = [1, 2, 3, 4, 5, 6];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, \"Program Library\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, this.createLibrary(this.props.programList)));\n  }\n\n}\n\nexport default ProgramLibrary;","map":{"version":3,"sources":["/Users/rishubnahar/Desktop/djangoprojects/modern_health_project/front_end/src/components/programs.js"],"names":["React","HorizontalScroller","ProgramLibrary","Component","createLibrary","programList","programLibrary","map","program","index","name","createSectionCards","divStyle","margin","maxWidth","scrollBox","overflowY","height","checkBoxStyle","marginTop","pathToCats","require","context","imagePathMap","sectionList","section","imageName","description","__html","htmlContent","render","lister","props"],"mappings":"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","sourcesContent":["import React from 'react'\nimport HorizontalScroller from 'react-horizontal-scroll-container';\n\nclass ProgramLibrary extends React.Component {\n  render(){\n    var lister = [1,2,3,4,5,6]\n    return (\n       <div>\n         <center><h1>Program Library</h1></center>\n          <div>\n              {this.createLibrary(this.props.programList)}\n          </div>\n       </div>\n\n     )\n  }\n\n  createLibrary = (programList) => {\n\n    const programLibrary  = programList.map((program, index) =>\n    <div >\n        <h3 > {\"Program \" + (index + 1) + \": \" + program.name}</h3>\n\n        <div class = \"container\">\n        <div class=\"row\">\n                {this.createSectionCards(program)}\n        </div>\n        </div>\n    </div>\n    );\n    return programLibrary\n  }\n  createSectionCards = (program) => {\n\n    const divStyle = {\n      margin: '30px',\n      maxWidth: '20%',\n    };\n\n    const scrollBox = {\n      overflowY: \"scroll\",\n      height: \"50px\",\n    };\n    const checkBoxStyle = {\n      margin: \"10px\",\n      marginTop: \"10px\",\n    }\n\n    const pathToCats = require.context('../images/', true);\n\n    var imagePathMap = {  \"action\":  require('../images/action.png'),\n                          \"flexibility\"  : require('../images/flexible.png'),\n                          \"mind\" : require('../images/mind.png'),\n                          \"values\": require('../images/values.png'),\n                          \"creative\": require('../images/creative.png'),\n                          \"empathy\": require('../images/empathy.png'),\n                        }\n\n\n    const sectionList = program.sectionList.map((section, index) =>\n      <div class=\"col m4\">\n\n         <div class=\"card\" style = {divStyle}>\n            <div class=\"card-image waves-effect waves-block waves-light\">\n               <img class=\"activator\" src= {imagePathMap[section.imageName]}/>\n\n            </div>\n            <label >\n            <input type=\"checkbox\" class = \"filled-in\"  />\n              <span>Complete</span>\n            </label>\n\n            <div class=\"card-content\">\n              <span class=\"card-title activator blue-text text-darken-4\">  {\"Part \" + (index + 1) + \": \" + section.name } <i class=\"material-icons right\">more_vert</i></span>\n\n              <p style = {scrollBox}> {section.description} </p>\n            </div>\n            <div class=\"card-reveal\">\n              <span class=\"card-title grey-text text-darken-4\"> {\"PART \" + (index + 1) + \" \" + section.name} <i class=\"material-icons right\">close</i></span>\n              <p dangerouslySetInnerHTML={{__html: section.htmlContent}} />\n\n            </div>\n        </div>\n      </div>\n       );\n    return sectionList;\n  }\n\n\n}\n\nexport default ProgramLibrary\n"]},"metadata":{},"sourceType":"module"}